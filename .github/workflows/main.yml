name: "Lemonade main"
'on':
  push:
    branches:
    - master
    - unstable
  pull_request:
    branches:
    - '**'
env:
  ccache_basedir: ${{ github.workspace }}
  ccache_dir: "${{ github.workspace }}/.ccache"
  ccache_compilercheck: content
  ccache_compress: 'true'
  ccache_compresslevel: 9
  ccache_maxsize: 200M
  ccache_cmake: -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache

jobs:
    main:
      name: "Lemonade tests"
      runs-on: "ubuntu-latest"
      steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install Dependencies
        run: |-
          sudo apt-get update
          sudo apt-get install -y \
            libgoogle-perftools-dev libprotobuf-dev protobuf-compiler \
            libboost-all-dev ccache \
            libibus-1.0-dev  \
            libpcre++-dev qttools5-dev qtbase5-dev libqt5svg5-dev libarchive-dev libpcre2-dev
      - name: Install MKL
        run: |-
          wget -qO- "https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB" | sudo apt-key add -
          sudo sh -c "echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list"
          sudo apt-get update -o Dir::Etc::sourcelist="/etc/apt/sources.list.d/intel-mkl.list"
          sudo apt-get install -y --no-install-recommends intel-mkl-64bit-2020.0-088
      - name: Generate ccache_vars for ccache based on machine
        shell: bash
        id: ccache_vars
        run: |-
          echo "::set-output name=hash::$(echo ${{ env.ccache_compilercheck }})"
          echo "::set-output name=timestamp::$(date '+%Y-%m-%dT%H.%M.%S')"
      - name: Cache-op for build-cache through ccache
        uses: actions/cache@v2
        with:
          path: ${{ env.ccache_dir }}
          key: ccache-${{ matrix.identifier }}-${{ steps.ccache_vars.outputs.hash }}-${{ github.ref }}-${{ steps.ccache_vars.outputs.timestamp }}
          restore-keys: |-
            ccache-${{ matrix.identifier }}-${{ steps.ccache_vars.outputs.hash }}-${{ github.ref }}
            ccache-${{ matrix.identifier }}-${{ steps.ccache_vars.outputs.hash }}
            ccache-${{ matrix.identifier }}
      - name: ccache environment setup
        run: |-
          echo "CCACHE_COMPILER_CHECK=${{ env.ccache_compilercheck }}" >> $GITHUB_ENV
          echo "CCACHE_BASEDIR=${{ env.ccache_basedir }}" >> $GITHUB_ENV
          echo "CCACHE_COMPRESS=${{ env.ccache_compress }}" >> $GITHUB_ENV
          echo "CCACHE_COMPRESSLEVEL=${{ env.ccache_compresslevel }}" >> $GITHUB_ENV
          echo "CCACHE_DIR=${{ env.ccache_dir }}" >> $GITHUB_ENV
          echo "CCACHE_MAXSIZE=${{ env.ccache_maxsize }}" >> $GITHUB_ENV
      - name: ccache prolog
        run: |-
          ccache -s # Print current cache stats
          ccache -z # Zero cache entry
      - name: cmake
        run: |-
          mkdir -p build
          cd build
          cmake -L .. -DCOMPILE_TESTS=on -DCOMPILE_PYTHON=on ${{ env.ccache_cmake }}
      - name: Build from source
        working-directory: build
        run: make -j2
      - name: ccache epilog
        run: 'ccache -s # Print current cache stats'
      - name: Run unit tests
        working-directory: build
        run: ctest
